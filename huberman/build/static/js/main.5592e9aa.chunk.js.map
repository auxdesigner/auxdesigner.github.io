{"version":3,"sources":["head.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","defaultTime","afterMinTime1","afterMinTime2","beforeMinTime1","beforeMinTime2","changeTime","bind","event","moment","target","value","tempMinTime1","subtract","tempMinTime2","add","format","this","setState","className","src","pic","alt","TextField","id","label","type","color","variant","autoFocus","defaultValue","inputProps","step","onChange","href","rel","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAAe,MAA0B,iC,uCCiG1BA,E,kDA1Fb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,YAAa,QACbC,cAAe,WACfC,cAAe,WACfC,eAAgB,WAChBC,eAAgB,YAElB,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBATD,E,8CAYnB,SAAWC,GACT,IAAMP,EAAcQ,IAAOD,EAAME,OAAOC,MAAO,WACzCC,EAAeH,IAAOR,GAAaY,SAAS,EAAG,SAC/CC,EAAeL,IAAOR,GAAaY,SAAS,GAAI,WAEhDX,EAAgBO,IAAOG,GAC1BG,IAAI,EAAG,SACPC,OAAO,WACJb,EAAgBM,IAAOK,GAC1BC,IAAI,EAAG,SACPC,OAAO,WAEJZ,EAAiBK,IAAOG,GAC3BC,SAAS,EAAG,SACZG,OAAO,WACJX,EAAiBI,IAAOK,GAC3BD,SAAS,EAAG,SACZG,OAAO,WAEVC,KAAKC,SAAS,CACZjB,YAAaO,EAAME,OAAOC,MAC1BT,cAAeA,EACfC,cAAeA,EACfC,eAAgBA,EAChBC,eAAgBA,M,oBAIpB,WACE,OACE,sBAAKc,UAAU,MAAf,UACE,+EACA,qBAAKC,IAAKC,EAAKC,IAAI,QACnB,8DACA,cAACC,EAAA,EAAD,CACEC,GAAG,OACHC,MAAM,GACNC,KAAK,OACLC,MAAM,UACNC,QAAQ,WACRC,WAAW,EACXC,aAAcb,KAAKjB,MAAMC,YACzB8B,WAAY,CACVC,KAAM,KAERC,SAAUhB,KAAKX,aAEjB,8BACE,oDADF,qCAEGW,KAAKjB,MAAME,cAFd,MAEgCe,KAAKjB,MAAMG,cACzC,uBACA,uBACA,kDALF,qCAMGc,KAAKjB,MAAMI,eANd,MAMiCa,KAAKjB,MAAMK,kBAE5C,uFACwD,IACtD,mBACE6B,KAAK,2CACLxB,OAAO,SACPyB,IAAI,aAHN,4BAMK,IARP,KASK,IACH,mBACED,KAAK,8CACLxB,OAAO,SACPyB,IAAI,aAHN,mC,GA9EQC,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5592e9aa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/head.ebc27bfd.jpg\";","import React from \"react\";\nimport pic from \"./head.jpg\";\nimport \"./App.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport moment from \"moment\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      defaultTime: \"07:00\",\n      afterMinTime1: \"09:00 AM\",\n      afterMinTime2: \"11:30 AM\",\n      beforeMinTime1: \"11:00 PM\",\n      beforeMinTime2: \"01:30 AM\",\n    };\n    this.changeTime = this.changeTime.bind(this);\n  }\n\n  changeTime(event) {\n    const defaultTime = moment(event.target.value, \"hh:mm A\");\n    const tempMinTime1 = moment(defaultTime).subtract(2, \"hours\");\n    const tempMinTime2 = moment(defaultTime).subtract(90, \"minutes\");\n\n    const afterMinTime1 = moment(tempMinTime1)\n      .add(4, \"hours\")\n      .format(\"hh:mm A\");\n    const afterMinTime2 = moment(tempMinTime2)\n      .add(6, \"hours\")\n      .format(\"hh:mm A\");\n\n    const beforeMinTime1 = moment(tempMinTime1)\n      .subtract(6, \"hours\")\n      .format(\"hh:mm A\");\n    const beforeMinTime2 = moment(tempMinTime2)\n      .subtract(4, \"hours\")\n      .format(\"hh:mm A\");\n\n    this.setState({\n      defaultTime: event.target.value,\n      afterMinTime1: afterMinTime1,\n      afterMinTime2: afterMinTime2,\n      beforeMinTime1: beforeMinTime1,\n      beforeMinTime2: beforeMinTime2,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>\"A knob you can turn for shifting your clock\"</h1>\n        <img src={pic} alt=\"pic\" />\n        <h2>When do you usually wake up?</h2>\n        <TextField\n          id=\"time\"\n          label=\"\"\n          type=\"time\"\n          color=\"primary\"\n          variant=\"outlined\"\n          autoFocus={true}\n          defaultValue={this.state.defaultTime}\n          inputProps={{\n            step: 900, // 15 min\n          }}\n          onChange={this.changeTime}\n        />\n        <p>\n          <b>To wake up earlier:</b> Light/exercise/feeding during&nbsp;\n          {this.state.afterMinTime1} - {this.state.afterMinTime2}\n          <br />\n          <br />\n          <b>To wake up later:</b> Light/exercise/feeding during&nbsp;\n          {this.state.beforeMinTime1} - {this.state.beforeMinTime2}\n        </p>\n        <h4>\n          Learn more about temperature minimum and sleep in the{\" \"}\n          <a\n            href=\"https://www.instagram.com/p/CKWiRVJHVwC/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Instagram post\n          </a>{\" \"}\n          or{\" \"}\n          <a\n            href=\"https://www.youtube.com/watch?v=NAATB55oxeQ\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            the podcast\n          </a>\n        </h4>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}